diff --git a/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h
new file mode 100644
index 0000000..7f40509
--- /dev/null
+++ b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.h
@@ -0,0 +1,50 @@
+
+/*
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by GenerateRCTThirdPartyFabricComponentsProviderH
+ */
+
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wreturn-type-c-linkage"
+
+#import <React/RCTComponentViewProtocol.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+Class<RCTComponentViewProtocol> RCTThirdPartyFabricComponentsProvider(const char *name);
+#if RCT_NEW_ARCH_ENABLED
+#ifndef RCT_DYNAMIC_FRAMEWORKS
+
+#if !TARGET_OS_OSX
+Class<RCTComponentViewProtocol> RNCSafeAreaProviderCls(void) __attribute__((used)); // 0
+Class<RCTComponentViewProtocol> RNCSafeAreaViewCls(void) __attribute__((used)); // 0
+#endif
+
+#if !TARGET_OS_OSX
+Class<RCTComponentViewProtocol> RNSFullWindowOverlayCls(void) __attribute__((used)); // 1
+Class<RCTComponentViewProtocol> RNSModalScreenCls(void) __attribute__((used)); // 1
+Class<RCTComponentViewProtocol> RNSScreenContainerCls(void) __attribute__((used)); // 1
+Class<RCTComponentViewProtocol> RNSScreenCls(void) __attribute__((used)); // 1
+Class<RCTComponentViewProtocol> RNSScreenNavigationContainerCls(void) __attribute__((used)); // 1
+Class<RCTComponentViewProtocol> RNSScreenStackHeaderConfigCls(void) __attribute__((used)); // 1
+Class<RCTComponentViewProtocol> RNSScreenStackHeaderSubviewCls(void) __attribute__((used)); // 1
+Class<RCTComponentViewProtocol> RNSScreenStackCls(void) __attribute__((used)); // 1
+Class<RCTComponentViewProtocol> RNSSearchBarCls(void) __attribute__((used)); // 1
+#endif
+
+
+#endif
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+#pragma GCC diagnostic pop
+
diff --git a/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm
new file mode 100644
index 0000000..39bfe54
--- /dev/null
+++ b/node_modules/react-native/React/Fabric/RCTThirdPartyFabricComponentsProvider.mm
@@ -0,0 +1,60 @@
+
+/**
+ * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
+ *
+ * Do not edit this file as changes may cause incorrect behavior and will be lost
+ * once the code is regenerated.
+ *
+ * @generated by GenerateRCTThirdPartyFabricComponentsProviderCpp
+ */
+
+// OSS-compatibility layer
+
+#import "RCTThirdPartyFabricComponentsProvider.h"
+
+#import <string>
+#import <unordered_map>
+
+Class<RCTComponentViewProtocol> RCTThirdPartyFabricComponentsProvider(const char *name) {
+  static std::unordered_map<std::string, Class (*)(void)> sFabricComponentsClassMap = {
+    #if RCT_NEW_ARCH_ENABLED
+    #ifndef RCT_DYNAMIC_FRAMEWORKS
+#if !TARGET_OS_OSX
+
+    {"RNCSafeAreaProvider", RNCSafeAreaProviderCls}, // 0
+
+    {"RNCSafeAreaView", RNCSafeAreaViewCls}, // 0
+#endif
+
+#if !TARGET_OS_OSX
+
+    {"RNSFullWindowOverlay", RNSFullWindowOverlayCls}, // 1
+
+    {"RNSModalScreen", RNSModalScreenCls}, // 1
+
+    {"RNSScreenContainer", RNSScreenContainerCls}, // 1
+
+    {"RNSScreen", RNSScreenCls}, // 1
+
+    {"RNSScreenNavigationContainer", RNSScreenNavigationContainerCls}, // 1
+
+    {"RNSScreenStackHeaderConfig", RNSScreenStackHeaderConfigCls}, // 1
+
+    {"RNSScreenStackHeaderSubview", RNSScreenStackHeaderSubviewCls}, // 1
+
+    {"RNSScreenStack", RNSScreenStackCls}, // 1
+
+    {"RNSSearchBar", RNSSearchBarCls}, // 1
+#endif
+
+    #endif
+    #endif
+  };
+
+  auto p = sFabricComponentsClassMap.find(name);
+  if (p != sFabricComponentsClassMap.end()) {
+    auto classFunc = p->second;
+    return classFunc();
+  }
+  return nil;
+}
diff --git a/node_modules/react-native/index.js b/node_modules/react-native/index.js
index f087b70..93637bb 100644
--- a/node_modules/react-native/index.js
+++ b/node_modules/react-native/index.js
@@ -198,7 +198,21 @@ module.exports = {
   get VirtualizedSectionList(): VirtualizedSectionList {
     return require('./Libraries/Lists/VirtualizedSectionList');
   },
+  get ColorPropType(): $FlowFixMe {
+    return require('deprecated-react-native-prop-types').ColorPropType;
+  },
+  
+  get EdgeInsetsPropType(): $FlowFixMe {
+    return require('deprecated-react-native-prop-types').EdgeInsetsPropType;
+  },
   
+  get PointPropType(): $FlowFixMe {
+    return require('deprecated-react-native-prop-types').PointPropType;
+  },
+  
+  get ViewPropTypes(): $FlowFixMe {
+    return require('deprecated-react-native-prop-types').ViewPropTypes;
+  },
   // APIs
   get ActionSheetIOS(): ActionSheetIOS {
     return require('./Libraries/ActionSheetIOS/ActionSheetIOS');
